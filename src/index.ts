import express from 'express';
import TelegramBot from 'node-telegram-bot-api';
import dotenv from 'dotenv';
import fetch from 'node-fetch';
import {assert} from './utils/assert';
import {addTextToImage} from "./utils/imageUtils";
import {searchPhoto} from "./utils/searchPhoto";

dotenv.config();

const app = express();
const port = 3003;

const token = process.env.TELEGRAM_TOKEN;
assert(token, 'TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');

const bot = new TelegramBot(token, {polling: true});

const userSessions = new Map<number, { step: string, query?: string, memeText?: string }>();

bot.onText(/\/meme/, (msg) => {
    const chatId = msg.chat.id;

    const options = {
        reply_markup: {
            inline_keyboard: [
                [{text: "–°–æ–∑–¥–∞—Ç—å –º–µ–º", callback_data: "create_meme"}]
            ]
        }
    };

    bot.sendMessage(chatId, "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –º–µ–ºüßô", options);
});

bot.on("callback_query", (query) => {
    const chatId = query.message?.chat.id;
    if (!chatId) return;

    if (query.data === "create_meme") {
        userSessions.set(chatId, {step: "awaiting_photo_description"});
        bot.sendMessage(chatId, "–ß—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ —Ñ–æ—Ç–æ? –õ—É—á—à–µ –ø–∏—à–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)");
    }
});

bot.on("message", async (msg) => {
    const chatId = msg.chat.id;
    if (!userSessions.has(chatId)) return;

    const session = userSessions.get(chatId);

    if (session?.step === "awaiting_photo_description") {
        session.query = msg.text || "nature";
        session.step = "awaiting_caption";
        bot.sendMessage(chatId, "–ü—Ä–∏–¥—É–º–∞–π –ø–æ–¥–ø–∏—Å—å –¥–ª—è –º–µ–º–∞");
    } else if (session?.step === "awaiting_caption") {
        session.memeText = msg.text || "meme";
        session.step = "creating_meme";

        try {
            const photoUrl = await searchPhoto(session.query ?? "nature");


            const response = await fetch(photoUrl);
            const buffer = await response.arrayBuffer();

            const outputImage = await addTextToImage(Buffer.from(buffer), session.memeText);

            bot.sendPhoto(chatId, outputImage);
        } catch (error) {
            console.error(error);
            bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–º–∞');
        }

        userSessions.delete(chatId);
    }
});

app.get('/', (req, res) => {
    res.send('–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç. –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω.');
});

app.listen(port, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${port}`);
});
